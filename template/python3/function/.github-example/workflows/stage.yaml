name: Stage

on:
  push:
    branches:
      - develop
jobs:
  func-build:
    runs-on: ubuntu-latest
    env:
      OPENFAAS_TEMPLATE_STORE_URL: https://raw.githubusercontent.com/podstream/openfaas-templates/master/templates.json
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Define ENV VARS
        id: define_env
        run:  echo "::set-output name=github-sha-short::$(echo $GITHUB_SHA | cut -c 1-7)"
      -
        name: Pull template
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: template store pull python3
      -
        name: Run shrinkwrap build
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: build -f ${{ secrets.FUNCTION_NAME }}.yaml --shrinkwrap
      -
        name: Login to OpenFaaS Gateway
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: login -u ${{ secrets.OPENFAAS_STAGING_GATEWAY_USERNAME }} \
                      -p ${{ secrets.OPENFAAS_STAGING_GATEWAY_PASSWORD }} \
                      -g ${{ secrets.OPENFAAS_STAGING_GATEWAY }}
      -
        name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and Push the OpenFaaS function
        uses: docker/build-push-action@v2
        with:
          context: ./build/${{ secrets.FUNCTION_NAME }}/
          file: ./build/${{ secrets.FUNCTION_NAME }}/Dockerfile
          push: true
          tags: podstream/${{ secrets.FUNCTION_NAME }}:latest-${{ steps.define_env.outputs.github-sha-short }}
      -
        name: Deploy the function
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: deploy -f ${{ secrets.FUNCTION_NAME }}.yaml --tag sha --gateway ${{ secrets.OPENFAAS_STAGING_GATEWAY }}
